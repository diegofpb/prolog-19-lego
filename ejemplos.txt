% TORRE VALIDA (EJEMPLO A)

esTorre([
    pieza( s(s(0)), s(0), s(s(0)), v)]).

esTorre([
    pieza( s(s(0)), s(0), s(s(0)), pene)]).

esTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), am),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r)]).

% TORRE NO VALIDA

esTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), am),
    pieza( s(s(0)), s(0), s(s(0)), a)]).

% ALTURA TORRE CORRECTA (EJEMPLO A)

alturaTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), am),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r)]
, s(s(s(s(s(s(s(0)))))))).

% OBTENER ALTURA TORRE.

alturaTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), am),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r)], ALTURA).

% INTENTAR OBTENER ALTURA TORRE SIN SER TORRE.

alturaTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a)
    ], ALTURA).

% COLORES TORRE SIN SER TORRE

coloresTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a)
    ], COLORES).

% OBTENER COLORES TORRE CON TORRE VALIDA

coloresTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), am),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r)
    ], COLORES).


% COMPROBAR COLORES TORRE CON LISTA COLORES.

coloresTorre([
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), r),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(0)), s(0), s(s(0)), v),
    pieza( s(s(0)), s(0), s(s(0)), am),
    pieza( s(s(0)), s(0), s(s(0)), a),
    pieza( s(s(s(s(s(s(s(0))))))), s(0), s(s(0)), r)
    ], [v,r,a,v,am,a,r]).

% COMPROBAR COLORES TORRE CON LISTA COLORES.

CONTARCLAVOS IMPAR.
contarClavos([
    ['b','b','b','r','r','r','r','b','b','b'],
    ['b','b','b','b','a','a','a','a','b','b'],
    ['b','b','am','am','am','am','am','am','am','am'],
    ['v','v','v','v','a','a','a','a','a','a'],
    ['b','b','a','a','a','a','r','r','r','r'],
    ['b','b','b','b','am','am','am','am','b','b']
],0,R).

CONTARCLAVOSIMPAR
contarClavos([
    ['b','b','b','r','r','r','r','b','b','b'],
    ['b','b','b','b','a','a','a','a','a','b'],
    ['b','b','am','am','am','am','am','am','am','am'],
    ['v','v','v','v','a','a','a','a','a','a'],
    ['b','b','a','a','a','a','r','r','r','r'],
    ['b','b','b','b','am','am','am','am','b','b']
],0,R).

ESEDIFICIOPAR PAR

esEdificioPar([
    ['b','b','b','r','r','r','r','b','b','b'],
    ['b','b','b','b','a','a','a','a','b','b'],
    ['b','b','am','am','am','am','am','am','am','am'],
    ['v','v','v','v','a','a','a','a','a','a'],
    ['b','b','a','a','a','a','r','r','r','r'],
    ['b','b','b','b','am','am','am','am','b','b']
]).

ESEDIFICIOPAR PAR IMPAR

esEdificioPar([
    ['b','b','b','r','r','r','r','b','b','b'],
    ['b','b','b','b','a','a','a','a','a','b'],
    ['b','b','am','am','am','am','am','am','am','am'],
    ['v','v','v','v','a','a','a','a','a','a'],
    ['b','b','a','a','a','a','r','r','r','r'],
    ['b','b','b','b','am','am','am','am','b','b']
]).

ES EDIFICIO PIRAMIDE SIN SER PIRAMIDE
esEdificioPiramide([
    ['b','b','b','r','r','r','r','b','b','b'],
    ['b','b','b','b','a','a','a','a','a','b'],
    ['b','b','am','am','am','am','am','am','am','am'],
    ['v','v','v','v','a','a','a','a','a','a'],
    ['b','b','a','a','a','a','r','r','r','r'],
    ['b','b','b','b','am','am','am','am','b','b']
]).

ES EDIFICIO PIRAMIDE SIN SER PIRAMIDE EN UN NIVEL DE IGUAL TAMAÃ‘O
esEdificioPiramide([
    ['b','b','b','r','r','r','r','b','b','b'],
    ['b','b','b','b','a','a','a','a','b','b'],
    ['b','b','am','am','am','am','am','am','am','am'],
    ['v','v','v','v','a','a','a','a','a','a'],
    ['b','b','a','a','a','a','r','r','r','r'],
    ['b','b','b','b','am','am','am','am','b','b']
]).

ES EDIFICIO PIRAMIDE SIENDO PIRAMIDE

esEdificioPiramide([
    ['b','b','b','r','r','r','r','b','b','b'],
    ['b','b','r','r','a','a','a','b','b','b'],
    ['b','b','am','am','am','am','am','am','b','b'],
    ['v','v','v','v','a','a','a','b','b','b'],
    ['b','a','a','a','a','a','r','r','r','b'],
    ['a','a','a','a','am','am','am','am','r','r']
]).